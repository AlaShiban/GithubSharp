<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:Ninject.Web.Mvc.NinjectActionInvoker">
            <summary>
            An <see cref="T:System.Web.Mvc.IActionInvoker"/> that injects filters with dependencies.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.#ctor(Ninject.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Web.Mvc.NinjectActionInvoker"/> class.
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
            <summary>
            Gets the filters for the specified request and action.
            </summary>
            <param name="controllerContext">The controller context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
            <returns>The filters.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
            <summary>
            Adds inferred view capability
            </summary>
            <param name="controllerContext"></param>
            <param name="controllerDescriptor"></param>
            <param name="actionName"></param>
            <returns></returns>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.Kernel">
            <summary>
            Gets or sets the kernel.
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor.#ctor(System.String,System.Web.Mvc.ControllerDescriptor)">
            <summary>
            
            </summary>
            <param name="actionName"></param>
            <param name="controllerDescriptor"></param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor.GetParameters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor.ActionName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.InferredActionDescriptor.ControllerDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectActionInvoker.InferredParameterDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.InferredParameterDescriptor.#ctor(System.Web.Mvc.ActionDescriptor,System.String)">
            <summary>
            
            </summary>
            <param name="descriptor"></param>
            <param name="parameterName"></param>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.InferredParameterDescriptor.ActionDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.InferredParameterDescriptor.ParameterName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.InferredParameterDescriptor.ParameterType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectActionInvoker.InferredViewResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.InferredViewResult.FindView(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectControllerFactory">
            <summary>
            A controller factory that creates <see cref="T:System.Web.Mvc.IController"/>s via Ninject.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.#ctor(Ninject.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Web.Mvc.NinjectControllerFactory"/> class.
            </summary>
            <param name="kernel">The kernel that should be used to create controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
            <summary>
            Gets a controller instance of type controllerType.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="controllerType">Type of controller to create.</param>
            <returns>The controller instance.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.CreateActionInvoker">
            <summary>
            Creates the action invoker.
            </summary>
            <returns>The action invoker.</returns>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectControllerFactory.Kernel">
            <summary>
            Gets the kernel that will be used to create controllers.
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectHttpApplication">
            <summary>
            Defines an <see cref="T:System.Web.HttpApplication"/> that is controlled by a Ninject <see cref="T:Ninject.IKernel"/>.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.Application_Start">
            <summary>
            Starts the application.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.Application_Stop">
            <summary>
            Stops the application.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.RegisterAllControllersIn(System.String)">
            <summary>
            Registers all controllers in the assembly with the specified name.
            </summary>
            <param name="assemblyName">Name of the assembly to search for controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.RegisterAllControllersIn(System.String,System.Func{System.Type,System.String})">
            <summary>
            Registers all controllers in the assembly with the specified name.
            </summary>
            <param name="assemblyName">Name of the assembly to search for controllers.</param>
            <param name="namingConvention">The naming convention to use for the controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.RegisterAllControllersIn(System.Reflection.Assembly)">
            <summary>
            Registers all controllers in the specified assembly.
            </summary>
            <param name="assembly">The assembly to search for controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.RegisterAllControllersIn(System.Reflection.Assembly,System.Func{System.Type,System.String})">
            <summary>
            Registers all controllers in the specified assembly.
            </summary>
            <param name="assembly">The assembly to search for controllers.</param>
            <param name="namingConvention">The naming convention to use for the controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.CreateKernel">
            <summary>
            Creates the kernel that will manage your application.
            </summary>
            <returns>The created kernel.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.CreateControllerFactory">
            <summary>
            Creates the controller factory that is used to create the controllers.
            </summary>
            <returns>The created controller factory.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.OnApplicationStarted">
            <summary>
            Called when the application is started.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.OnApplicationStopped">
            <summary>
            Called when the application is stopped.
            </summary>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectHttpApplication.Kernel">
            <summary>
            Gets the kernel.
            </summary>
        </member>
    </members>
</doc>
